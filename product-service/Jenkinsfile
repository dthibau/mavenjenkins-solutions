
pipeline {
  agent none
 tools {
  jdk 'JDK17'
}
 stages {
    stage('Unit') {
      agent any
      steps {
	// Build application
        echo 'Unit Test en packaging'
        sh './mvnw -Pprod -Dmaven.test.failure.ignore=true clean package'
      }
      post {
        always {
          junit 'target/surefire-reports/*.xml'
        }
        success {
          stash includes: 'target/*.jar', name: 'app'
        }
        unsuccessful {
          mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Build failure', to: 'david.thibau@gmail.com'
        }
      }
    }
    
    
    stage('Parallel Stage') {

      parallel {
        stage('Dependency check') {
          agent any
          steps {  
            sh './mvnw verify -Dmaven.test.skip=true'
            // sh "./mvnw -Pintegration integration-test"
            archiveArtifacts artifacts: 'target/dependency-check-report.html'
          }
        }
        stage('Qualité') {
          agent any
          steps {  
            // Start an analysis
            echo 'Qualité '
            withSonarQubeEnv('SonarLocal') {
                sh './mvnw clean verify sonar:sonar'
            }
          }
        }
      }
    }
    stage("Quality Gate") {
      steps {
	  // attendre le résultat de l'analyse 
    echo 'Watch quality gate'       
       }
    }
    stage("Nexus snapshot-deployement") {
      steps {
          // Déploiement Nexus
        echo 'Déploiement snapshot'
       }
    }
    stage('Validation métier') {
/* Execution seulement sur master */
      agent none     
       input {
          message "Déploiement en prod ?"
          ok "Oui "
          parameters {
            string(name: 'DATA_CENTER', defaultValue: 'Paris', description: 'Data Center où déployer')
          }
        }
      steps {
	// Faire une release
        echo 'Validation métier'
      }
    }

 }           
}
 
